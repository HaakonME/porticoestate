--- sarissa_dhtml.orig.js	2005-08-04 22:40:03.000000000 +1000
+++ sarissa_dhtml.js	2005-08-13 00:32:58.029217584 +1000
@@ -34,8 +34,9 @@
  * @param oTargetElement the element to update
  * @param xsltproc (optional) the transformer to use on the returned
  *                  content before updating the target element with it
+ * @param callBack (optional) function called after update is completed
  */
-Sarissa.updateContentFromURI = function(sFromUrl, oTargetElement, xsltproc) {
+Sarissa.updateContentFromURI = function(sFromUrl, oTargetElement, xsltproc, callBack) {
     try{
         oTargetElement.style.cursor = "wait";
         var xmlhttp = new XMLHttpRequest();
@@ -43,7 +44,7 @@
         function sarissa_dhtml_loadHandler() {
             if (xmlhttp.readyState == 4) {
                 oTargetElement.style.cursor = "auto";
-                Sarissa.updateContentFromNode(xmlhttp.responseXML, oTargetElement, xsltproc);
+                Sarissa.updateContentFromNode(xmlhttp.responseXML, oTargetElement, xsltproc, callBack);
             };
         };
 	    xmlhttp.onreadystatechange = sarissa_dhtml_loadHandler;
@@ -63,8 +64,9 @@
  * @param oTargetElement the element to update
  * @param xsltproc (optional) the transformer to use on the given 
  *                  DOM node before updating the target element with it
+ * @param callBack (optional) function called after update is completed
  */
-Sarissa.updateContentFromNode = function(oNode, oTargetElement, xsltproc) {
+Sarissa.updateContentFromNode = function(oNode, oTargetElement, xsltproc, callBack) {
     try {
         oTargetElement.style.cursor = "wait";
         Sarissa.clearChildNodes(oTargetElement);
@@ -85,13 +87,21 @@
                 oTargetElement.value = Sarissa.serialize(oNode);
             }
             else {
+                var oChildElement;
+
                 // ok that was not smart; it was paranoid. Keep up the good work by trying to use DOM instead of innerHTML
                 if(oNode.nodeType == Node.DOCUMENT_NODE || oNode.ownerDocument.documentElement == oNode) {
                     oTargetElement.innerHTML = Sarissa.serialize(oNode);
+                    oChildElement = oTargetElement.firstChild;
                 }
                 else if(oNode.nodeType == Node.ELEMENT_NODE) {
                     oTargetElement.appendChild(oTargetElement.importNode(oNode, true));
+                    oChildElement = oTargetElement.firstChild;
                 };
+
+                if (callBack && oChildElement) {
+                    callBack(oChildElement);
+                }
             };  
         };
     }
