<?php
	class import_conversion
	{
		protected $db;
		public $messages = array();
		public $warnings = array();
		public $errors = array();
		public $debug = true;

		public function __construct()
		{
			set_time_limit(10000); //Set the time limit for this request
			$this->account		= (int)$GLOBALS['phpgw_info']['user']['account_id'];
			$this->db           = & $GLOBALS['phpgw']->db;
		}

		public function add($data)
		{
			$error = false;
			$table = 'rental_party';
			$id = (int)$data[0];
			
			$fields = array
			(
				'id',
				'identifier',
				'first_name',
				'last_name',
				'comment',
				'is_inactive',
				'title',
				'company_name',
				'department',
				'address_1',
				'address_2',
				'postal_code',
				'place',
				'phone',
				'mobile_phone',
				'fax',
				'email',
				'url',
				'account_number',
				'reskontro',
				'location_id',
				'result_unit_number',
				'org_enhet_id'
			);

			$value_set = array();
			foreach ($fields as $key => $field)
			{
				$value_set[$field] 		= $this->db->db_addslashes($data[$key]);
			}
			unset($value_set['id']);
			unset($value_set['is_inactive']);
		
			$this->db->query("SELECT id FROM {$table} WHERE id = {$id}",__LINE__,__FILE__);
			if($this->db->next_record())
			{
				$this->warnings[] = "ID finnes fra før: {$id}, oppdaterer";
				$value_set	= $this->db->validate_update($value_set);
				$sql = "UPDATE {$table} SET {$value_set} WHERE id = {$id}";
			}
			else
			{
				$this->warnings[] = "ID fantes ikke fra før: {$id}";
			}

			if($this->debug)
			{
				_debug_array($sql);
			}
			else
			{
				$request_ok = $this->db->query($sql,__LINE__,__FILE__);
			}

			if(!$error)
			{
				$this->messages[] = "Successfully updated party: Title ({$data[7]})";
				$ok = true;
			}
			else
			{
				$this->errors[] = "Error updating location: Title ({$data[7]})";
				$ok = false;
			}
			return $ok;
		}

		
		/**
		 * Test a value for null according to several formats that can exist in the export.
		 * Returns true if the value is null according to these rules, false otherwise.
		 * 
		 * @param string $value The value to test
		 * @return bool
		 */
		protected function is_null($value)
		{
			return ((trim($value) == "") || ($data == "<NULL>") || ($data == "''"));
		}
	}
