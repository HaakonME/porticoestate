<?php
	/**
	* phpGroupWare - property: a Facilities Management System.
	*
	* @author Sigurd Nes <sigurdne@online.no>
	* @copyright Copyright (C) 2003,2004,2005,2006,2007 Free Software Foundation, Inc. http://www.fsf.org/
	* This file is part of phpGroupWare.
	*
	* phpGroupWare is free software; you can redistribute it and/or modify
	* it under the terms of the GNU General Public License as published by
	* the Free Software Foundation; either version 2 of the License, or
	* (at your option) any later version.
	*
	* phpGroupWare is distributed in the hope that it will be useful,
	* but WITHOUT ANY WARRANTY; without even the implied warranty of
	* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	* GNU General Public License for more details.
	*
	* You should have received a copy of the GNU General Public License
	* along with phpGroupWare; if not, write to the Free Software
	* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	*
	* @license http://www.gnu.org/licenses/gpl.html GNU General Public License
	* @internal Development of this application was funded by http://www.bergen.kommune.no/bbb_/ekstern/
	* @package property
	* @subpackage import
 	* @version $Id: Import_fra_Kemner_xml,v 1.13 2007/03/18 16:33:16 sigurdne Exp $
	*/

	/**
	 * Filteret benytter format X205 for integrasjon mellom Contempus Invoice og ClockWork Logistics.
	 * Formatet sender innskannede fakturaer fra Contempus til ClockWork - og Portico Estate
	 * @package property
	 */

/*
<?xml version="1.0" encoding="utf-8"?>
<INVOICEEXPORT xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <TRANSACTIONINFORMATION>
    <TRANSACTIONTYPE>X205</TRANSACTIONTYPE>
    <TRANSFERDATE>2009.05.28</TRANSFERDATE>
    <TRANSFERTIME>13:10:28</TRANSFERTIME>
  </TRANSACTIONINFORMATION>
  <INVOICES>
    <INVOICE>
      <INVOICEHEADER>
        <KEY>1400050146</KEY>
        <SCANNINGNO>11E28NJINL3VR6</SCANNINGNO>
        <AMOUNT>312500</AMOUNT>
        <ARRIVAL>2009.05.28</ARRIVAL>
        <CATEGORY />
        <CLIENT.CODE>14</CLIENT.CODE>
        <CURRENCY.CURRENCYID>NOK</CURRENCY.CURRENCYID>
        <EXCHANGERATE>1</EXCHANGERATE>
        <INVOICEDATE>2009.05.28</INVOICEDATE>
        <LOCALAMOUNT>312500</LOCALAMOUNT>
        <LOCALVATAMOUNT>62500</LOCALVATAMOUNT>
        <MATURITY>2009.06.30</MATURITY>
        <PAYAMOUNT>0</PAYAMOUNT>
        <POSTATUSUPDATED>0</POSTATUSUPDATED>
        <PURCHASEORDERNO>1409220008</PURCHASEORDERNO>
        <PURCHASEORDERSTATUS.CODE>WaitForMatch</PURCHASEORDERSTATUS.CODE>
        <SUPPLIER.BANKGIRO>70580621110</SUPPLIER.BANKGIRO>
        <SUPPLIER.CODE>100644</SUPPLIER.CODE>
        <SUPPLIERREF>7869</SUPPLIERREF>
        <VATAMOUNT>62500</VATAMOUNT>
      </INVOICEHEADER>
    </INVOICE>
  </INVOICES>
</INVOICEEXPORT>
*/
	class import_conv
	{
		var $spbudact_code='11954111';
		var $dimb=99;
		var $mvakode=0;
		var $kildeid=1;
		var $splitt=0;
		var $soXport;
		var $invoice;

		var $import = array(
			'Bilagsnr' => 'bilagsnr', 
			'Fakturanr' => 'fakturanr', 
			'Gnr/Bnr-seksjon' => 'gid',
			'Konto' => 'spbudact_code',
			'Objekt' => 'dima', //objectclass: organizationalPerson
			'DimB' => 'dimb',
			'KID' => 'kidnr',
			'MVA' => 'mvakode',
			'Tjeneste'=> 'kostra_id',
			'Belop [kr]' => 'belop',
			'Referanse' => 'referanse',
			'BOEI Gateadresse' => 'boei_gateadresse',
			);

		var $header = array('Bilagsnr','Fakturanr','Gnr/Bnr-seksjon','Konto','Objekt','DimB','KID','MVA','Tjeneste','Belop [kr]','Referanse');

		function import_conv()
		{
			$this->soXport 		= CreateObject('property.soXport');	
			$this->invoice 		= CreateObject('property.boinvoice');
			$this->bocommon		= CreateObject('property.bocommon');
			$this->dateformat	= $this->bocommon->dateformat;
			$this->datetimeformat	= $this->bocommon->datetimeformat;
//			$this->xmltool		= CreateObject('phpgwapi.xmltool');
		}

		function import($invoice_common,$download)
		{
			$tsvfile	= $invoice_common['tsvfile'];
			$valid_data= False;
			$bilagsnr = $this->invoice->next_bilagsnr();

			$buffer = array();

/*			$xmldata=file_get_contents($tsvfile);
			$this->xmltool->import_xml($xmldata);
			$var_result = $this->xmltool->export_var();
*/
			$xmlparse = CreateObject('property.XmlToArray');
			$xmlparse->setEncoding('UTF-8');
			$var_result = $xmlparse->parseFile($tsvfile);

			set_time_limit(300);

//_debug_array($var_result);
//die();

			if (isset($var_result['INVOICES']) AND is_array($var_result['INVOICES']))
			{
				$transferdate =  str_replace('.', '-', $var_result['TRANSACTIONINFORMATION'][0]['TRANSFERDATE']);// 2009.05.28
				$transfertime =  $var_result['TRANSACTIONINFORMATION'][0]['TRANSFERTIME'];// 13:10:28
				$regtid		= date($this->datetimeformat,strtotime("{$transferdate} {$transfertime}"));

				$i = 0;
				foreach ($var_result['INVOICES'] as $dummy => $entry)
				{
					$_data = $entry['INVOICE'][0]['INVOICEHEADER'][0];
				
_debug_array($_data);
die();

					$_data['KEY']; // => 1400050146
					$_data['SCANNINGNO']; // => 11E28NJINL3VR6
//					$_data['AMOUNT']; // => 312500
					$_data['ARRIVAL']; // => 2009.05.28
					$_data['CLIENT.CODE']; // => 14
					$_data['CURRENCY.CURRENCYID']; // => NOK
					$_data['EXCHANGERATE']; // => 1
//					$_data['INVOICEDATE']; // => 2009.05.28
					$_data['LOCALAMOUNT']; // => 312500
					$_data['LOCALVATAMOUNT']; // => 62500
//					$_data['MATURITY']; // => 2009.06.30
					$_data['PAYAMOUNT']; // => 0
					$_data['POSTATUSUPDATED']; // => 0
//					$_data['PURCHASEORDERNO']; // => 1409220008
					$_data['PURCHASEORDERSTATUS.CODE']; // => WaitForMatch
					$_data['SUPPLIER.BANKGIRO']; // => 70580621110
					$_data['SUPPLIER.CODE']; // => 100644
					$_data['SUPPLIERREF']; // => 7869
					$_data['VATAMOUNT']; // => 62500


					$order_id = $_data['PURCHASEORDERNO'];
					$fakturanr		= $data[$i]['InvoiceNo'];
					$fakturadato	= date($this->dateformat,strtotime(str_replace('.', '-', $_data['INVOICEDATE'])));
					$forfallsdato	= date($this->dateformat,strtotime(str_replace('.', '-', $_data['MATURITY'])));

					$periode = date('n',strtotime(str_replace('.', '-', $_data['INVOICEDATE'])));
					
					$belop 	= $_data['AMOUNT'];

					if( $invoice_common['art'] == 2 ) // kreditnota
					{
						$belop = -1 * abs($belop);
					}

					$kidnr 	= $_data['KIDNO'];

					$buffer[$i]['pmwrkord_code'] = $order_id;
					$buffer[$i]['fakturanr'] = $fakturanr;
					$buffer[$i]['periode'] = $periode;
					$buffer[$i]['forfallsdato'] = $forfallsdato;
					$buffer[$i]['fakturadato'] = $fakturadato;
					$buffer[$i]['belop'] = $belop;
					$buffer[$i]['godkjentbelop'] = $belop;
					
					$buffer[$i]['kidnr'] = $kidnr;
					$buffer[$i]['bilagsnr'] = $bilagsnr;

					
					//FIXME
					if(isset($invoice_common['dim_b']) && $invoice_common['dim_b'])
					{
						$buffer[$i]['dimb'] = $invoice_common['dim_b'];
					}
					else
					{
						$buffer[$i]['dimb'] = $this->dimb;
					}

			        //Finn dima fra Boei
					
					$location = $this->get_location($order_id);

					$buffer[$i]['dima'] = $location['dima'];
					$buffer[$i]['loc1'] = $location['loc1'];
					$buffer[$i]['mvakode'] = $this->mvakode;

					if($buffer[$i]['dima'] && (isset($invoice_common['auto_tax']) && $invoice_common['auto_tax']))
					{
						$mvakode = $this->soXport->auto_tax($buffer[$i]['dima']);
					
						if($mvakode)
						{
							$buffer[$i]['mvakode'] = $mvakode;
						}
					}

					if(isset($invoice_common['auto_tax']) && $invoice_common['auto_tax'])
					{
					//FIXME
						$buffer[$i]['mvakode'] = $this->soXport->tax_b_account_override($buffer[$i]['mvakode'] ,$this->spbudact_code);
						$buffer[$i]['mvakode'] = $this->soXport->tax_vendor_override($buffer[$i]['mvakode'] ,$invoice_common['vendor_id']);
					}

					$buffer[$i]['kostra_id'] = $this->soXport->get_kostra_id($buffer[$i]['loc1']);
					
					//finn boei gateadresse for kontroll
					$boei_gateadresse=$this->soXport->dima_to_address($buffer[$i]['dima']);
					$buffer[$i]['boei_gateadresse'] = utf8_encode($boei_gateadresse);

					$referanse = utf8_encode($data[$i]['Header'][0]['ShipTo'][0]['AddressInfo'][0]['Address']);
	
					$buffer[$i]['referanse'] = $referanse;                

					$merknad = '';

					$merknad = 'Kemner adr: '.$referanse."\r\n".'BOEI adr: '.$boei_gateadresse."\r\n";

					
					$buffer[$i]['merknad'] = utf8_encode($merknad);
					$buffer[$i]['splitt'] = $this->splitt;
					$buffer[$i]['kildeid'] = $this->kildeid;
					$buffer[$i]['spbudact_code'] = $this->spbudact_code;
					$buffer[$i]['typeid'] = $invoice_common['type'];
					$buffer[$i]['regtid'] = $regtid;
					$buffer[$i]['artid'] = $invoice_common['art'];
					$buffer[$i]['spvend_code'] = $invoice_common['vendor_id'];
					$buffer[$i]['oppsynsmannid'] = $invoice_common['janitor'];
					$buffer[$i]['saksbehandlerid'] = $invoice_common['supervisor'];
					$buffer[$i]['budsjettansvarligid'] = $invoice_common['budget_responsible'];
//_debug_array($bilagsnr);
					$bilagsnr++;
					$i++;
				}
			}

			if(!$download)
			{
				$buffer = $this->import_end_file($buffer,$invoice_common['bilagsnr']);
			}

			return $buffer;
		}

		function get_location($order_id = '')
		{
			$location = array();
			$order_id = (int) $order_id;
			$sql = "SELECT location_code FROM fm_workorder {$this->join} fm_project ON fm_workorder.project_id = fm_project.id WHERE fm_workorder.id = $order_id";
			$this->db->query($sql,__LINE__,__FILE__);
			$this->db->next_record();
			if ($this->db->f('location_code'))
			{ 
				$parts = explode('-',$this->db->f('location_code'));
				$location['dima'] = implode('', $parts);
				$location['loc1'] = $parts[0];
			}
			
			return $location;
		}


		function import_end_file($buffer,$bilagsnr)
		{
			$num	= $this->soXport->add($buffer);
			$receipt['message'][]= array('msg' => lang('Successfully imported %1 records into your invoice register.',$num).' '.lang('ID').': '. $bilagsnr);
			return $receipt;
		}
	}
