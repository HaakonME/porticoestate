<?php
	/**
	* phpGroupWare - property: a Facilities Management System.
	*
	* @author Sigurd Nes <sigurdne@online.no>
	* @copyright Copyright (C) 2003,2004,2005,2006,2007 Free Software Foundation, Inc. http://www.fsf.org/
	* This file is part of phpGroupWare.
	*
	* phpGroupWare is free software; you can redistribute it and/or modify
	* it under the terms of the GNU General Public License as published by
	* the Free Software Foundation; either version 2 of the License, or
	* (at your option) any later version.
	*
	* phpGroupWare is distributed in the hope that it will be useful,
	* but WITHOUT ANY WARRANTY; without even the implied warranty of
	* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	* GNU General Public License for more details.
	*
	* You should have received a copy of the GNU General Public License
	* along with phpGroupWare; if not, write to the Free Software
	* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	*
	* @license http://www.gnu.org/licenses/gpl.html GNU General Public License
	* @internal Development of this application was funded by http://www.bergen.kommune.no/bbb_/ekstern/
	* @package property
	* @subpackage import
 	* @version $Id: Import_fra_basware_xml,v 1.13 2007/03/18 16:33:16 sigurdne Exp $
	*/

	/**
	 * Filteret benytter format X205 for integrasjon mellom Contempus Invoice og ClockWork Logistics.
	 * Formatet sender innskannede fakturaer fra Contempus til ClockWork - og Portico Estate
	 * @package property
	 */


	class import_conv
	{
		var $mvakode=0;
		var $kildeid=1;
		var $splitt=0;
		var $soXport;
		var $invoice;
		var $bestiller = 85; //cat_id for rolle
		var $attestant = 84; //cat_id for rolle
		var $budsjettansvarlig = 83; //cat_id for rolle

		var $import = array(
			'Bilagsnr' => 'bilagsnr', 
			'Fakturanr' => 'fakturanr', 
			'Konto' => 'spbudact_code',
			'Objekt' => 'dima', //objectclass: organizationalPerson
			'DimB' => 'dimb',
			'KID' => 'kidnr',
			'MVA' => 'mvakode',
			'Tjeneste'=> 'kostra_id',
			'Belop [kr]' => 'belop',
			'Referanse' => 'referanse',
			'BOEI Gateadresse' => 'boei_gateadresse',
			);

		var $header = array('Bilagsnr','Fakturanr','Konto','Objekt','DimB','KID','MVA','Tjeneste','Belop [kr]','Referanse');

		function import_conv()
		{
			$this->soXport			= CreateObject('property.soXport');	
			$this->invoice			= CreateObject('property.soinvoice');
			$this->responsible		= CreateObject('property.soresponsible');
			$this->db				= & $GLOBALS['phpgw']->db;
			$this->join				= & $this->db->join;
			$this->left_join		= & $this->db->left_join;
			$this->like				= & $this->db->like;
			$this->dateformat		= $this->db->date_format();
			$this->datetimeformat	= $this->db->datetime_format();
		}

		function import($invoice_common,$download)
		{
			$tsvfile	= $invoice_common['tsvfile'];
			$valid_data= False;
			$bilagsnr = $this->invoice->next_bilagsnr();

			$buffer = array();

			$xmlparse = CreateObject('property.XmlToArray');
			$xmlparse->setEncoding('UTF-8');
			$var_result = $xmlparse->parseFile($tsvfile);

			set_time_limit(300);

			if (isset($var_result['INVOICES']) AND is_array($var_result['INVOICES']))
			{
				$transferdate =  str_replace('.', '-', $var_result['TRANSACTIONINFORMATION'][0]['TRANSFERDATE']);// 2009.05.28
				$transfertime =  $var_result['TRANSACTIONINFORMATION'][0]['TRANSFERTIME'];// 13:10:28
				$regtid		= date($this->datetimeformat,strtotime("{$transferdate} {$transfertime}"));

				$i = 0;
				foreach ($var_result['INVOICES'] as $dummy => $entry)
				{
					$_data = $entry['INVOICE'][0]['INVOICEHEADER'][0];
				
//_debug_array($_data);
//die();

					$_data['KEY']; // => 1400050146
//					$_data['SCANNINGNO']; // => 11E28NJINL3VR6
//					$_data['AMOUNT']; // => 312500
					$_data['ARRIVAL']; // => 2009.05.28
					$_data['CLIENT.CODE']; // => 14
					$_data['CURRENCY.CURRENCYID']; // => NOK
					$_data['EXCHANGERATE']; // => 1
//					$_data['INVOICEDATE']; // => 2009.05.28
					$_data['LOCALAMOUNT']; // => 312500
					$_data['LOCALVATAMOUNT']; // => 62500
//					$_data['MATURITY']; // => 2009.06.30
					$_data['PAYAMOUNT']; // => 0
					$_data['POSTATUSUPDATED']; // => 0
//					$_data['PURCHASEORDERNO']; // => 1409220008
					$_data['PURCHASEORDERSTATUS.CODE']; // => WaitForMatch
					$_data['SUPPLIER.BANKGIRO']; // => 70580621110
//					$_data['SUPPLIER.CODE']; // => 100644
//					$_data['SUPPLIERREF']; // => 7869
					$_data['VATAMOUNT']; // => 62500


					$order_id 		= $_data['PURCHASEORDERNO'];
					$fakturanr		= $_data['KEY'];
					$fakturadato	= date($this->dateformat,strtotime(str_replace('.', '-', $_data['INVOICEDATE'])));
					$forfallsdato	= date($this->dateformat,strtotime(str_replace('.', '-', $_data['MATURITY'])));
					$periode 		= date('n',strtotime(str_replace('.', '-', $_data['INVOICEDATE'])));
					$belop 			= $_data['AMOUNT']/100;

					if( $belop < 0 )
					{
						$invoice_common['art'] = 2;
					}
					if( $invoice_common['art'] == 2 ) // kreditnota
					{
						$belop = -1 * abs($belop);
					}

					$kidnr 	= $_data['KIDNO'];

					$buffer[$i]['external_ref']		= $_data['SCANNINGNO'];
					$buffer[$i]['pmwrkord_code']	= $order_id;
					$buffer[$i]['fakturanr']		= $fakturanr;
					$buffer[$i]['periode']			= $periode;
					$buffer[$i]['forfallsdato']		= $forfallsdato;
					$buffer[$i]['fakturadato']		= $fakturadato;
					$buffer[$i]['belop']			= $belop;
					$buffer[$i]['godkjentbelop']	= $belop;
					
					$buffer[$i]['kidnr']			= $kidnr;
					$buffer[$i]['bilagsnr']			= $bilagsnr;
					$buffer[$i]['referanse']		= "ordre: {$order_id}";

					$order_info = $this->get_order_info($order_id);

					if(isset($invoice_common['dim_b']) && $invoice_common['dim_b'])
					{
						$buffer[$i]['dimb'] = $invoice_common['dim_b'];
					}
					else
					{
						$buffer[$i]['dimb'] = $order_info['dimb'];
					}

					$buffer[$i]['dima'] = $order_info['dima'];
					$buffer[$i]['loc1'] = $order_info['loc1'];

					$buffer[$i]['mvakode'] = $this->mvakode;

					if($buffer[$i]['dima'] && (isset($invoice_common['auto_tax']) && $invoice_common['auto_tax']))
					{
						$mvakode = $this->soXport->auto_tax($buffer[$i]['dima']);
					
						if($mvakode)
						{
							$buffer[$i]['mvakode'] = $mvakode;
						}
					}

					if(isset($invoice_common['vendor_id']) && $invoice_common['vendor_id'])
					{
						$vendor_id = $invoice_common['vendor_id'];
					}
					else if ($order_id)
					{
						$vendor_id = $order_info['vendor_id'];
					}
					else
					{
						$vendor_id = $_data['SUPPLIER.CODE'];
					}
					
					
					if(isset($invoice_common['auto_tax']) && $invoice_common['auto_tax'])
					{
						$buffer[$i]['mvakode'] = $this->soXport->tax_b_account_override($buffer[$i]['mvakode'], $order_info['spbudact_code']);
						$buffer[$i]['mvakode'] = $this->soXport->tax_vendor_override($buffer[$i]['mvakode'], $vendor_id);
					}

					$buffer[$i]['kostra_id'] = $this->soXport->get_kostra_id($buffer[$i]['loc1']);
					
					$merknad = "lag meg ein link til bilde av faktura - ref: {$_data['SCANNINGNO']}";
					
					$buffer[$i]['merknad'] = $merknad;
					$buffer[$i]['splitt'] = $this->splitt;
					$buffer[$i]['kildeid'] = $this->kildeid;
					$buffer[$i]['spbudact_code'] = $order_info['spbudact_code'];
					$buffer[$i]['typeid'] = isset($invoice_common['type']) && $invoice_common['type'] ? $invoice_common['type'] : 1;
					$buffer[$i]['regtid'] = $regtid;
					$buffer[$i]['artid'] = $invoice_common['art'];
					$buffer[$i]['spvend_code'] = $vendor_id;

					$oppsynsmannid = '';
					if(isset($invoice_common['janitor']) && $invoice_common['janitor'])
					{
						$oppsynsmannid = $invoice_common['janitor'];
					}
					else if($order_info['janitor'])
					{
						$oppsynsmannid = $order_info['janitor'];				
					}

					$saksbehandlerid = '';
					if(isset($invoice_common['supervisor']) && $invoice_common['supervisor'])
					{
						$saksbehandlerid = $invoice_common['supervisor'];
					}
					else if($order_info['supervisor'])
					{
						$saksbehandlerid = $order_info['supervisor'];	
					}

					$budsjettansvarligid = '';
					if(isset($invoice_common['budget_responsible']) && $invoice_common['budget_responsible'])
					{
						$budsjettansvarligid = $invoice_common['budget_responsible'];
					}
					else if($order_info['budget_responsible'])
					{
						$budsjettansvarligid = $order_info['budget_responsible'];
					}

					$buffer[$i]['oppsynsmannid']		= $oppsynsmannid;
					$buffer[$i]['saksbehandlerid']		= $saksbehandlerid;
					$buffer[$i]['budsjettansvarligid']	= $budsjettansvarligid;

					$bilagsnr++;
					$i++;
				}
			}

			if(!$download)
			{
				$buffer = $this->import_end_file($buffer,$invoice_common['bilagsnr']);
			}

			return $buffer;
		}

		function get_order_info($order_id = '')
		{
			$order_info = array();
			$order_id = (int) $order_id;
			$sql = "SELECT fm_workorder.location_code,fm_workorder.vendor_id,fm_workorder.account_id,fm_workorder.ecodimb, fm_workorder.user_id"
			. " FROM fm_workorder {$this->join} fm_project ON fm_workorder.project_id = fm_project.id WHERE fm_workorder.id = $order_id";
			$this->db->query($sql,__LINE__,__FILE__);
			$this->db->next_record();
			if ($this->db->f('location_code'))
			{ 
				$parts = explode('-',$this->db->f('location_code'));
				$order_info['dima'] = implode('', $parts);
				$order_info['loc1'] = $parts[0];
			}
			
			$order_info['vendor_id'] 			= $this->db->f('vendor_id');
			$order_info['spbudact_code']		= $this->db->f('account_id');
			$order_info['dimb']					= $this->db->f('ecodimb');
			
			$criteria_janitor					= array('ecodimb' => $order_info['dimb'], 'cat_id' => $this->bestiller ); //bestiller
			$janitor_contact_id					= $this->responsible->get_responsible($criteria_janitor);
			$janitor_user_id					= $this->responsible->get_contact_user_id($janitor_contact_id);
			$order_info['janitor']				= $GLOBALS['phpgw']->accounts->get($janitor_user_id)->lid;

			$criteria_supervisor				= array('ecodimb' => $order_info['dimb'], 'cat_id' => $this->attestant); // attestere
			$supervisor_contact_id				= $this->responsible->get_responsible($criteria_supervisor);
			$supervisor_user_id					= $this->responsible->get_contact_user_id($supervisor_contact_id);
			$order_info['supervisor']			= $GLOBALS['phpgw']->accounts->get($supervisor_user_id)->lid;

			$criteria_budget_responsible		= array('ecodimb' => $order_info['dimb'], 'cat_id' => $this->budsjettansvarlig); //anviser
			$budget_responsible_contact_id		= $this->responsible->get_responsible($criteria_budget_responsible);
			$budget_responsible_user_id			= $this->responsible->get_contact_user_id($budget_responsible_contact_id);
			$order_info['budget_responsible']	= $GLOBALS['phpgw']->accounts->get($budget_responsible_user_id)->lid;

			return $order_info;
		}


		function import_end_file($buffer,$bilagsnr)
		{
			$num	= $this->soXport->add($buffer);
			$receipt['message'][]= array('msg' => lang('Successfully imported %1 records into your invoice register.',$num).' '.lang('ID').': '. $bilagsnr);
			return $receipt;
		}
	}
